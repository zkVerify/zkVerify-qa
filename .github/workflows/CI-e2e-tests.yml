name: zkVerify E2E Tests

on:
  workflow_dispatch:
    inputs:
      zkverify_docker_tag:
        description: "Docker image tag for zkverify"
        type: string
      zkverify_version:
        description: "Commit hash or tag for zkVerify repository"
        type: string
      attestation_bot_branch:
        description: "Branch for attestation bot"
        required: false
        type: string
        default: "main"
      zkv_contracts_branch:
        description: "Branch for zkv attestation contracts"
        required: false
        type: string
        default: "main"
      artifact_name:
        type: string
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

  workflow_call:
    inputs:
      zkverify_docker_tag:
        description: "Docker image tag for zkverify"
        type: string
      zkverify_version:
        description: "Commit hash or tag for zkVerify repository"
        type: string
      attestation_bot_branch:
        description: "Branch for attestation bot"
        required: false
        type: string
        default: "main"
      zkv_contracts_branch:
        description: "Branch for zkv attestation contracts"
        required: false
        type: string
        default: "main"
      artifact_name:
        type: string
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_TOKEN:
        required: true
      GH_TOKEN:
        required: true
      QA_SLACK_WEBHOOK_URL:
        required: true
env:
  NODE_VERSION: "20"

jobs:
  e2e-build-and-test:
    runs-on: ubuntu-latest

    outputs:
      test_status: ${{ steps.run-e2e-tests.outputs.test_status }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - uses: actions/checkout@v4
        with:
          repository: HorizenLabs/zkVerify-qa
          ref: main
          clean: true
          fetch-depth: 1
          token: ${{ secrets.GH_TOKEN }}

      - name: Download Docker image artifact
        if: ${{ inputs.artifact_name != '' && github.event.inputs.artifact_name != '' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
      
      - name: Run E2E tests
        id: run-e2e-tests
        uses: ./.github/actions/e2e-test
        with:
          zkverify_docker_tag: ${{ inputs.zkverify_docker_tag || github.event.inputs.docker_tag }}
          zkverify_version: ${{ inputs.zkverify_version || github.event.inputs.zkverify_version }}
          attestation_bot_branch: ${{ inputs.attestation_bot_branch || github.event.inputs.attestation_bot_branch }}
          zkv_contracts_branch: ${{ inputs.zkv_contracts_branch || github.event.inputs.zkv_contracts_branch }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          QA_SLACK_WEBHOOK_URL: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
       
      - name: Print test status
        run: |
          if [ "${{ steps.run-e2e-tests.outputs.test_status }}" == "success" ]; then
            echo "Tests all passed"
          else
            echo "Tests did not pass, status = ${{ steps.run-e2e-tests.outputs.test_status }}"
          fi
